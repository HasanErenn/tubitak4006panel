// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  IDARECI
  OGRETMEN
  TUBITAK_OKUL_YETKILISI
  OGRENCI
}

model User {
  id         String   @id @default(cuid())  // SQLite uyumlu cuid
  email      String   @unique
  password   String
  name       String?
  schoolCode String?  // Okul kodu (sadece rakamlar)
  role       Role     @default(USER)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Kullanıcının girdiği bilgiler
  userInfos UserInfo[]
  
  // Yüklenen paylaşılan dosyalar
  sharedFiles SharedFile[]
  
  // Oluşturulan timeline öğeleri
  timelineItems Timeline[]

  @@map("users")
}

model UserInfo {
  id          String   @id @default(cuid())  // SQLite uyumlu cuid
  title       String   // Alt Proje Adı
  mainArea    String   // Alt Proje Ana Alanı
  projectType String   // Alt Proje Türü (Araştırma/Tasarım)
  projectSubType String @default("4006-B") // Proje Alt Türü (4006-A / 4006-B)
  subject     String?  // Alt Proje Konusu (4006-B için)
  thematicArea String? // Tematik Alan (4006-A için)
  purpose     String   // Amaç/Amaç ve Önem
  method      String   // Yöntem
  expectedResult String // Beklenen Sonuç
  surveyApplied Boolean @default(false) // Anket uygulayacak mı
  isPublic    Boolean  @default(false) // Herkese açık mı
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // İlişkiler
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_infos")
}

model ProjectSubject {
  id        String   @id @default(cuid())  // SQLite uyumlu cuid
  name      String   @unique
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("project_subjects")
}

model SharedFile {
  id           String   @id @default(cuid())  // SQLite uyumlu cuid
  fileName     String   // Sunucuda kaydedilen dosya adı (uuid + extension)
  originalName String   // Kullanıcının yüklediği orijinal dosya adı
  fileType     String   // MIME type (application/pdf, image/png, image/jpeg)
  fileSize     Int      // Byte cinsinden dosya boyutu
  description  String?  // Dosya açıklaması
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // İlişkiler
  uploadedById String
  uploadedBy   User     @relation(fields: [uploadedById], references: [id], onDelete: Cascade)

  @@map("shared_files")
}

model Timeline {
  id          String   @id @default(cuid())  // SQLite uyumlu cuid
  title       String   // Başlık
  description String   // Açıklama
  targetDate  DateTime // Hedef tarih
  status      String   // pending, in-progress, completed, delayed
  order       Int      // Sıralama
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // İlişkiler
  createdById String
  createdBy   User     @relation(fields: [createdById], references: [id], onDelete: Cascade)

  @@map("timeline_items")
}
